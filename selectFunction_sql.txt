단일행 함수 : 입력 데이터 수만큼 출력 데이터

Oracle DB 자체적인 지원 함수 다수 존재
    - 숫자
    - 문자
    - 날짜
    - ...

    SQL> select count(*) from dept;
            - 숫자 세기

    SQL> select length(dname) from dept;
            - 네임 길이

    SQL> select lengthb(dname) from dept;
            - 네임 길이 byte

    sum = 합계 / 그룹 함수

<오라클 dumy table 검색>

-- dumy table : 산술 연산 결과등을 확인하기 위한 임시 table

    SQL> select * from dual;

        DU
        --
        X

    SQL>  select 2+3 from dual;

               2+3
        ----------
                 5

    SQL> select sysdate from dual;

        SYSDATE
        --------
        18/11/26
    


함수 개념
1. 주 용도 : 기능이 이미 구현된 재사용 가능한 로직
2. abs() 함수로 함수들 이해하기
    - abs() : 숫자값을 절대값으로 전환해서 값을 호출한 곳을 전송(응답, 리턴)
            : 필요한 정보 -> 가공 -> 숫자값을 반환

-- 1. 절대값 구하는 함수 : abs()
    SQL> select -2, abs(-2) from dual;

                -2    ABS(-2)
        ---------- ----------
                -2          2

-- 2.반올림 구하는 함수 : round(데이터[반올림 자릿수])

    SQL> select 34, 53, round(34,53) from emp;

                34         53 ROUND(34,53)
        ---------- ---------- ------------
                34         53           34
                34         53           34
                34         53           34
                34         53           34
                34         53           34
                34         53           34
                34         53           34
                34         53           34
                34         53           34
                34         53           34
                34         53           34
                34         53           34

    SQL> select 34.5653, round(345.653, 1) from dual;

            34.5653    ROUND(345.653,1)
            ---------- ----------------
            34.5653              345.7

-- 3. 지정한 자리수 이하 버리는 함수 : trunc(,)
-- trunc(데이터, 자릿수)
-- 지릿수 : +(소수점 이하), -(정수 의미)
-- 참고 : 존재하는 table의 데이터만 삭제 방법 : delete[복원]/truncate[복원 불가]

    SQL> select 34.53, trunc(34.53) from dual;

            34.53  TRUNC(34.53)
        ---------- ------------
            34.53           34

-- 4. 나누고 난 나머지 값 연산 함수 : mod( , )
-- 모듈러스 연산자, %표기로 연산, 오라클에선 mod() 함수명 사용

    SQL> select mod(17,3) from dual;

         MOD(17,3)
        ----------
                2 

-- 5. emp talbe에서 사번이 홀수인 사원의 이름, 사번 검색

    SQL> select ename, empno from emp where mod(empno,2)=1;

        ENAME                     EMPNO
        -------------------- ----------
        SMITH                      7369
        ALLEN                      7499
        WARD                       7521
        KING                       7839

    SQL> select ename, empno from emp where mod(empno,2)!=0;

        ENAME                     EMPNO
        -------------------- ----------
        SMITH                      7369
        ALLEN                      7499
        WARD                       7521
        KING                       7839

-- 6. 제곱수 구하는 함수 : power('제곱할수','몇 제곱')

    SQL> select power(3,2)from dual;

        POWER(3,2)
        ----------
                9

    SQL> select power(3,3)from dual;

        POWER(3,3)
        ----------
                27



문자 함수

  대문자 : upper
  소문자 : lower
  철자 : case

-- 1. 대문자로 변화 시키는 함수
        upper() : 대문자 [uppercase]
        lower() : 소문자 [lowercase]

    SQL> select 'aBcD', upper('aBcD') as 대, lower('aBcD') as 소 from dual;

        'ABCD'   대       소
        -------- -------- --------
        aBcD     ABCD     abcd

-- 2. manager로 job 칼럼과 뜻이 일치되는 사원의 사원명 검색하기

    SQL> select ename, job from emp where job = 'MANAGER';

        ENAME                JOB
        -------------------- ------------------
        JONES                MANAGER
        BLAKE                MANAGER
        CLARK                MANAGER

    MANAGER가 대문자이므로 upper, lower 쓰는것을 비추 한다.

-- 3. 문자열 길이 체크함수 : length()
        - 참고 사항 : Oracle xe 버전은 단순 교육용 버전, 한글 정석을 2byte, xe버전은 3byte

    SQL> select job, length(job) from emp;

        JOB                LENGTH(JOB)
        ------------------ -----------
        CLERK                        5
        SALESMAN                     8
        SALESMAN                     8
        MANAGER                      7
        SALESMAN                     8
        MANAGER                      7
        MANAGER                      7
        PRESIDENT                    9
        SALESMAN                     8
        CLERK                        5
        ANALYST                      7
        CLERK                        5

    SQL> select length('가') from dual;

        LENGTH('가')
        ------------
                1

-- 4. byte 수 체크 함수 : lengthb()

    SQL> select job, length(job), lengthb(job) from emp;

        JOB                LENGTH(JOB) LENGTHB(JOB)
        ------------------ ----------- ------------
        CLERK                        5            5
        SALESMAN                     8            8
        SALESMAN                     8            8
        MANAGER                      7            7
        SALESMAN                     8            8
        MANAGER                      7            7
        MANAGER                      7            7
        PRESIDENT                    9            9
        SALESMAN                     8            8
        CLERK                        5            5
        ANALYST                      7            7
        CLERK                        5            5

-- 5. 문바열 일부 추출 함수 : substr('data',시작할위치,'추출할 개수)
        - 서브 스트링 : 하나의 문자열에서 일부 언어 발췌하는 로직의 표현
        - sql에서 문자열 1부터 시작 다른 언어에서는 문자열 0부터 시작
        - 권장 습관 : 프로그램에 sql반영시 DB와 직접 sql 실습후에 문제없는 sql 문장 한해서만 코드에 반영

    SQL> select substr('abcd', 2, 3) from dual;

        SUBSTR
        ------
        bcd
         -> abcd중 2번쨰인 b부터 3개 가 추출되어 출력

-- 6. 년도 구분없이 2월에 입사한 사원이름, 입사일 검색
        - data 타입에도 substr() 함수 사용 가능

    - 먼저 hiredate를 검색 한다
    SQL> select hiredate from emp;

        HIREDATE
        --------
        80/12/17
        81/02/20
        81/02/22
        81/04/02
        81/09/28
        81/05/01
        81/06/09
        81/11/17
        81/09/08
        81/12/03
        81/12/03
        82/01/23

        -> 여기서 2월만을 추출하면 되는데 월은 4번부터 2개만 추출하면 된다.


    SQL> select ename, substr(hiredate, 4, 2) 월 from emp;

        ENAME                월
        -------------------- ----------------
        SMITH                12
        ALLEN                02
        WARD                 02
        JONES                04
        MARTIN               09
        BLAKE                05
        CLARK                06
        KING                 11
        TURNER               09
        JAMES                12
        FORD                 12
        MILLER               01

        -> 우선 사원들이 언제 입사하였는지 확인 가능

    SQL> select ename, substr(hiredate, 4, 2) 월 from emp where substr(hiredate , 4,2) = 02;

        ENAME                월
        -------------------- ----------------
        ALLEN                02
        WARD                 02

-- 7. 문자열 앞뒤에 잉여 여백 제거 함수 : trim()

    SQL> select ' abc', length(' abc'), trim(' abc'), length(trim(' abc')) from dual;

        'ABC'    LENGTH('ABC') TRIM(' LENGTH(TRIM('ABC'))
        -------- ------------- ------ -------------------
        abc                 4 abc                      3


--***[날짜 함수]***--

-- 1. 어제, 오늘, 내일 날짜 검색 ( sysdate )

    SQL> select sysdate-1 as 어제, sysdate as 오늘, sysdate+1 as 내일 from dual;

        어제     오늘     내일
        -------- -------- --------
        18/12/23 18/12/24 18/12/25

-- 2. emp table에서 근무일수 계산하기, 사번과 근무일수(반올림) 검색

    SQL> select empno 사번 , round(sysdate-hiredate) 근무일수 from emp;

            사번   근무일수
        ---------- ----------
            7369      13888
            7499      13823
            7521      13821
            7566      13782
            7654      13603
            7698      13753
            7782      13714
            7839      13553
            7844      13623
            7900      13537
            7902      13537
            7934      13486

-- 3. 특정 개월수 더하는 함수 : add_months(,)
    -- 6개월 이후 검색

        SQL> select sysdate, add_months(sysdate,6) from dual;

            SYSDATE  ADD_MONT
            -------- --------
            18/12/25 19/06/25

-- 4. 입사일 이후 3개월 지난 일수 검색

        SQL> select hiredate 근무일자 , add_months(hiredate,3) 삼개월후 from emp;

            근무일자 삼개월후
            -------- --------
            80/12/17 81/03/17
            81/02/20 81/05/20
            81/02/22 81/05/22
            81/04/02 81/07/02
            81/09/28 81/12/28
            81/05/01 81/08/01
            81/06/09 81/09/09
            81/11/17 82/02/17
            81/09/08 81/12/08
            81/12/03 82/03/03
            81/12/03 82/03/03
            82/01/23 82/04/23

-- 5. 두 날짜 사이의 개월수 검색 : months_between( , )

    SQL> select sysdate, months_between(sysdate,'2016-09-19') from dual;

        SYSDATE  MONTHS_BETWEEN(SYSDATE,'2016-09-19')
        -------- ------------------------------------
        18/12/25                           27.2253543

-- 6. 요일을 기준으로 특정 날짜 검색 : next_day( , )

    SQL> select sysdate, next_day(sysdate, '토요일') from dual;

        SYSDATE  NEXT_DAY
        -------- --------
        18/12/25 18/12/29

-- 7. 주어진 날짜를 기준으로 해당 달의 가장 마지막 날짜 : last_day( , )

    SQL> select last_day(sysdate)from dual;

        LAST_DAY
        --------
        18/12/31

-- 8. 2016년 2월의 마지막 날짜는?

    SQL> select last_day('2016/02/01') from dual;

        LAST_DAY
        --------
        16/02/29

--***[형변환 함수]***--
-- 사용 빈도가 높음

-- [1] to_char() : 날짜 -> 문자, 숫자 -> 문자 / 숫자를 문자형으로 변환
    ex) to_char(날짜데이터, '희망 포멧 문자열')

    -- 1. 오늘 날짜를 'yyyy-mm-dd' 변환

        SQL> select to_char(sysdate, 'yyyy-mm-dd') 날짜  from dual;

            날짜
            --------------------
            2018-12-25

    -- 2. 요일 출력
        SQL> select to_char(sysdate, 'yyyy-mm-dd (dy)') 날짜  from dual;

            날짜
            ----------------------------------
            2018-12-25 (화)

    -- 3. 12시간 기준 출력
        
        SQL> select to_char(sysdate,'yyyy-mm-dd hh:mi:ss') 날짜및시간 from dual;

            날짜및시간
            --------------------------------------
            2018-12-25 11:49:42

    -- 4. 24시간 기준 출력

        SQL> select to_char(sysdate,'yyyy-mm-dd hh24:mi:ss') 날짜및시간 from dual;

            날짜및시간
            --------------------------------------
            2018-12-25 23:52:05

    -- 5. am, pm 오전 오후 의미, am을 주로 사용

        SQL> select to_char(sysdate,'yyyy-mm-dd hh:mi:ss am') 날짜및시간 from dual;

            날짜및시간
            ----------------------------------------------------
            2018-12-25 11:52:51 오후

    -- 6. round() : 정오를 기준으로 이 시간 초과시 무조건 다음 날짜
          trunc() : 24시간 내의 모든 내용 당일 처리

        SQL> select sysdate 오늘 , round(sysdate) 다음날 ,trunc(sysdate) 당일  from dual;

            오늘     다음날   당일
            -------- -------- --------
            18/12/25 18/12/26 18/12/25

    -- 7. 숫자를 원하는 형식으로 변환 검색
        -- 9 : 실제 데이터의 유효한 자릿수 숫자 의미(자릿수 채우지 않음)
        -- 0 :	 "		(자릿수 채움)
        -- . : 소수점 표현
        -- , : 원단위 표현
        -- $ : 달러 
        -- L or l : 로케일의 줄임말(os 자체의 인코딩 기본 정보로 해당 언어의 기본 통화표현)

        SQL> select to_char(1234, '9999.99') from dual;

            TO_CHAR(1234,'99
            ----------------
            1234.00

        SQL> select to_char(1234, '$9999,99') from dual;

            TO_CHAR(1234,'$999
            ------------------
            $12,34

        SQL> select to_char(1234, '9999') from dual;

            TO_CHAR(12
            ----------
            1234
            
        SQL> select to_char(1234, '999,999') from dual;

            TO_CHAR(1234,'99
            ----------------
            1,234

        SQL> select to_char(1234, '99999') from dual;

            TO_CHAR(1234
            ------------
            1234  

        SQL> select to_char(1234, '00000') from dual;

            TO_CHAR(1234
            ------------
            01234

        SQL> select to_char(1234, 'L99,999') from dual;

            TO_CHAR(1234,'L99,999')
            ----------------------------------
                    ￦1,234

        SQL> select to_char(1234, 'l99,999') from dual;

            TO_CHAR(1234,'L99,999')
            ----------------------------------
                    ￦1,234

-- [2] to_date() : 날짜로 변경 시키는 함수

    -- 1. 올해 며칠이 지났는지 검색(포멧 yyyy/mm/dd)

        SQL> select sysdate-to_date(20160101, 'yyyy/mm/dd') from dual;

            SYSDATE-TO_DATE(20160101,'YYYY/MM/DD')
            --------------------------------------
                                        1090.00444

    -- 2. 문자열로 date 타입 검색 가능 [데이터 값 표현이 유연함]
        -- 1980년 12월 17일날입사한 직원명

                SQL> select * from emp where hiredate = '80/12/17';

                        EMPNO ENAME                JOB                       MGR HIREDATE        SAL       COMM     DEPTNO
                    ---------- -------------------- ------------------ ---------- -------- ---------- ---------- ----------
                        7369 SMITH                CLERK                    7902 80/12/17        800                    20

-- [3] to_number() : 문자열을 숫자로 변환

    -- 1. '20,000'의 데이터에서 '10,000' 산술 연산하기

        SQL> select to_char(to_number('20,000','99,999')-to_number('10,000','99,999'),'99,999') as 산술  from dual;

            산술
            --------------
            10,000

--*** 조건식 함수 ***--
-- decode()-if or switch 문과 같은 함수
-- decode(조건 칼럼, 조건값1, 출력 데이터1 조건값2, 출력데이터2 .... default값) from 테이블명;

-- 1. deptno에 따른 출력 데이터

        SQL> select deptno, decode(deptno,10, 'A',20, 'B','무') from dept;

                DEPTNO DECODE
            ---------- ------
                    10 A
                    20 B
                    30 무
                    40 무

-- 2. emp table의 연봉(sal) 인상 계산하기
    -- job이 ANALYST 5%인상, SALESMAN은 10% 인상, MANAGER는 15%, CLERK 20% 이상 
        
        SQL> select job, sal, decode(job, 'ANALYST', sal*1.05, 'SALESMAN',  sal*1.1, 'MANAGER', sal*1.15, 'CLERK', sal*1.2 ) as 인상분 from emp;

            JOB                       SAL     인상분
            ------------------ ---------- ----------
            CLERK                     800        960
            SALESMAN                 1600       1760
            SALESMAN                 1250       1375
            MANAGER                  2975    3421.25
            SALESMAN                 1250       1375
            MANAGER                  2850     3277.5
            MANAGER                  2450     2817.5
            PRESIDENT                5000
            SALESMAN                 1500       1650
            CLERK                     950       1140
            ANALYST                  3000       3150
            CLERK                    1300       1560

--3. 'MANAGER'인 직군은 '갑', 'ANALYST' 직군은 '을', 나머지는 '병'으로 검색
    -- 검색 데이터 ename, job, 갑?을?병? 검색 

    SQL> select job, ename, decode(job, 'ANALYST', '을', 'MANAGER', '갑', '병')from emp;

        JOB                ENAME                DECODE
        ------------------ -------------------- ------
        CLERK              SMITH                병
        SALESMAN           ALLEN                병
        SALESMAN           WARD                 병
        MANAGER            JONES                갑
        SALESMAN           MARTIN               병
        MANAGER            BLAKE                갑
        MANAGER            CLARK                갑
        PRESIDENT          KING                 병
        SALESMAN           TURNER               병
        CLERK              JAMES                병
        ANALYST            FORD                 을
        CLERK              MILLER               병